name: Frontend Deploy
description: Build frontend assets and deploy to S3/CloudFront.
inputs:
  node-version:
    description: Node.js version to install.
    required: false
    default: "20"
  aws-region:
    description: AWS region for deployment.
    required: true
  aws-role-arn:
    description: AWS IAM role ARN to assume.
    required: true
  artifact-bucket:
    description: S3 bucket name for build artifacts.
    required: true
  cf-distribution-id:
    description: CloudFront distribution ID to invalidate.
    required: true
runs:
  using: composite
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: npm

    - name: Install & Build
      run: |
        npm ci
        npm run build
      shell: bash

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.aws-role-arn }}
        aws-region: ${{ inputs.aws-region }}

    - name: Upload assets (immutable) — 1行
      run: |
        aws s3 cp dist/ s3://$ARTIFACT_BUCKET/ --recursive --exclude "*.html" --cache-control "public,max-age=31536000,immutable"
      shell: bash
      env:
        ARTIFACT_BUCKET: ${{ inputs.artifact-bucket }}

    - name: Upload HTML (short cache) — 1行
      run: |
        aws s3 cp dist/ s3://$ARTIFACT_BUCKET/ --recursive --exclude "*" --include "*.html" --cache-control "public,max-age=60,must-revalidate"
      shell: bash
      env:
        ARTIFACT_BUCKET: ${{ inputs.artifact-bucket }}

    - name: Invalidate minimal paths — 1行
      run: |
        aws cloudfront create-invalidation --distribution-id "$CF_ID" --paths "/index.html" "/"
      shell: bash
      env:
        CF_ID: ${{ inputs.cf-distribution-id }}
